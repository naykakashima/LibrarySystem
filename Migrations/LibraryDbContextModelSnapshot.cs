// <auto-generated />
using LibrarySystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibrarySystem.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibrarySystem.BookBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookBase");

                    b.HasDiscriminator().HasValue("BookBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LibrarySystem.AudioBook", b =>
                {
                    b.HasBaseType("LibrarySystem.BookBase");

                    b.Property<int>("RuntimeMinutes")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("AudioBook");
                });

            modelBuilder.Entity("LibrarySystem.Book", b =>
                {
                    b.HasBaseType("LibrarySystem.BookBase");

                    b.HasDiscriminator().HasValue("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
