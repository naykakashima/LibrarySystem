// <auto-generated />
using System;
using LibrarySystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibrarySystem.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250620030522_fixerrorborrowreturn")]
    partial class fixerrorborrowreturn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibrarySystem.BookBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<Guid?>("BorrowedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BorrowedByUserId");

                    b.ToTable("Books", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LibrarySystem.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("LibrarySystem.AudioBook", b =>
                {
                    b.HasBaseType("LibrarySystem.BookBase");

                    b.Property<int>("runtimeMinutes")
                        .HasColumnType("int");

                    b.ToTable("Books_Audio", (string)null);
                });

            modelBuilder.Entity("LibrarySystem.Book", b =>
                {
                    b.HasBaseType("LibrarySystem.BookBase");

                    b.ToTable("Books_Physical", (string)null);
                });

            modelBuilder.Entity("LibrarySystem.BookBase", b =>
                {
                    b.HasOne("LibrarySystem.User", "BorrowedByUser")
                        .WithMany()
                        .HasForeignKey("BorrowedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BorrowedByUser");
                });

            modelBuilder.Entity("LibrarySystem.AudioBook", b =>
                {
                    b.HasOne("LibrarySystem.BookBase", null)
                        .WithOne()
                        .HasForeignKey("LibrarySystem.AudioBook", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibrarySystem.Book", b =>
                {
                    b.HasOne("LibrarySystem.BookBase", null)
                        .WithOne()
                        .HasForeignKey("LibrarySystem.Book", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
